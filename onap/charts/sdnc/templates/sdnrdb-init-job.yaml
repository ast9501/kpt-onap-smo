# Source: onap/charts/sdnc/templates/sdnrdb-init-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: onap-sdnc-sdnrdb-init-job
  namespace: onap
  labels:
    app.kubernetes.io/name: sdnc
    helm.sh/chart: sdnc-10.0.0
    app.kubernetes.io/instance: onap
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 20
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sdnc
        helm.sh/chart: sdnc-10.0.0
        app.kubernetes.io/instance: onap
        app.kubernetes.io/managed-by: Helm
      name: sdnc
    spec:
      initContainers:
      - name: sdnc-cert-initializer-readiness
        image: nexus3.onap.org:10001/onap/oom/readiness:3.0.1
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 100
          runAsGroup: 65533
        command:
        - /app/ready.py
        args:
        - --container-name
        - aaf-locate
        - --container-name
        - aaf-cm
        - --container-name
        - aaf-service
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 3m
            memory: 20Mi
      - name: sdnc-aaf-config
        image: nexus3.onap.org:10001/onap/aaf/aaf_agent:2.1.20
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /opt/app/osaaf
          name: onap-sdnc-aaf-config
        - mountPath: /opt/app/aaf_config/cert/truststoreONAPall.jks.b64
          name: aaf-agent-certs
          subPath: truststoreONAPall.jks.b64
        - mountPath: /opt/app/aaf_config/cert/truststoreONAP.p12.b64
          name: aaf-agent-certs
          subPath: truststoreONAP.p12.b64
        - name: aaf-add-config
          mountPath: /opt/app/aaf_config/bin/retrieval_check.sh
          subPath: retrieval_check.sh
        - name: aaf-add-config
          mountPath: /opt/app/aaf_config/bin/aaf-add-config.sh
          subPath: aaf-add-config.sh
        command:
        - sh
        - -c
        - |
          /opt/app/aaf_config/bin/agent.sh
          . /opt/app/aaf_config/bin/retrieval_check.sh
          /opt/app/aaf_config/bin/aaf-add-config.sh
        env:
        - name: APP_FQI
          value: "sdnc@sdnc.onap.org"
        - name: aaf_locate_url
          value: "https://aaf-locate.onap:8095"
        - name: aaf_locator_container_ns
          value: "onap"
        - name: aaf_locator_container
          value: "oom"
        - name: aaf_locator_fqdn
          value: "sdnc"
        - name: aaf_locator_app_ns
          value: "org.osaaf.aaf"
        - name: DEPLOY_FQI
          valueFrom:
            secretKeyRef:
              name: onap-sdnc-cert-initializer-deployer-creds
              key: login
        - name: DEPLOY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: onap-sdnc-cert-initializer-deployer-creds
              key: password
              #Note: want to put this on Nodes, eventually
        - name: cadi_longitude
          value: "-72.0"
        - name: cadi_latitude
          value: "38.0"
          #Hello specific.  Clients don't don't need this, unless Registering with AAF Locator
        - name: aaf_locator_public_fqdn
          value: "sdnc.onap.org"
      - name: sdnc-chown
        image: docker.io/busybox:1.34.1
        command: ["sh", "-c", "chown -R 100:101 /opt/app/osaaf/local"]
        volumeMounts:
        - mountPath: /opt/app/osaaf
          name: onap-sdnc-aaf-config
      - name: sdnc-readiness
        command:
        - /app/ready.py
        args:
        - --container-name
        - sdnrdb-elasticsearch
        - --container-name
        - sdnrdb-nginx
        - --container-name
        - sdnrdb-master
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: nexus3.onap.org:10001/onap/oom/readiness:3.0.1
        imagePullPolicy: IfNotPresent
      containers:
      - name: sdnc-sdnrdb-init-job
        image: nexus3.onap.org:10001/onap/sdnc-image:2.3.0
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash"]
        args: ["-c", "/opt/onap/sdnc/bin/startODL.sh"]
        env:
        - name: SDNC_AAF_ENABLED
          value: "true"
        - name: SDNC_HOME
          value: "/opt/onap/sdnc"
        - name: ETC_DIR
          value: "/opt/onap/sdnc/data"
        - name: BIN_DIR
          value: "/opt/onap/sdnc/bin"
        ## start sdnrdb parameter
        - name: SDNRINIT
          value: "true"
        - name: SDNRDBURL
          value: "https://sdnrdb.onap:9200"
        - name: SDNRDBPARAMETER
          value: "-k"
        volumeMounts:
        - mountPath: /opt/app/osaaf
          name: onap-sdnc-aaf-config
        resources: {}
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: docker-entrypoint-initdb-d
        emptyDir: {}
      - name: bin
        configMap:
          name: onap-sdnc-bin
          defaultMode: 0755
      - name: properties
        configMap:
          name: onap-sdnc-properties
          defaultMode: 0644
      - name: onap-sdnc-aaf-config
        emptyDir:
          medium: Memory
      - name: aaf-agent-certs
        configMap:
          name: onap-cert-wrapper-certs
          defaultMode: 0700
      - name: aaf-add-config
        configMap:
          name: onap-sdnc-cert-initializer-add-config
          defaultMode: 0700
      restartPolicy: Never
      imagePullSecrets:
      - name: "onap-docker-registry-key"
