# Source: onap/charts/policy/charts/policy-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: onap-policy-api-configmap
  namespace: onap
  labels:
    app: policy-api
    chart: policy-api-10.0.0
    release: onap
    heritage: Helm
data:
  apiParameters.yaml: |
    #  ============LICENSE_START=======================================================
    #   Copyright (C) 2022 Bell Canada. All rights reserved.
    #  ================================================================================
    #  Licensed under the Apache License, Version 2.0 (the "License");
    #  you may not use this file except in compliance with the License.
    #  You may obtain a copy of the License at
    #
    #       http://www.apache.org/licenses/LICENSE-2.0
    #
    #  Unless required by applicable law or agreed to in writing, software
    #  distributed under the License is distributed on an "AS IS" BASIS,
    #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #  See the License for the specific language governing permissions and
    #  limitations under the License.
    #
    #  SPDX-License-Identifier: Apache-2.0
    #  ============LICENSE_END=========================================================

    server:
      port: 6969

    spring:
      security.user:
        name: "${RESTSERVER_USER}"
        password: "${RESTSERVER_PASSWORD}"
      mvc.converters.preferred-json-mapper: gson
      datasource:
        url: jdbc:mariadb://policy-mariadb:3306/policyadmin
        driverClassName: org.mariadb.jdbc.Driver
        username: "${SQL_USER}"
        password: "${SQL_PASSWORD}"
        hikari:
          maximumPoolSize: 20
      jpa:
        properties:
          hibernate:
            dialect: org.hibernate.dialect.MariaDB103Dialect
        hibernate:
          ddl-auto: none
          naming:
            physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
            implicit-strategy: org.onap.policy.common.spring.utils.CustomImplicitNamingStrategy

    policy-api:
      name: ApiGroup
      aaf: false

    database:
      name: PolicyProviderParameterGroup
      implementation: org.onap.policy.models.provider.impl.DatabasePolicyModelsProviderImpl
      driver: org.mariadb.jdbc.Driver
      url: jdbc:mariadb://policy-mariadb:3306/policyadmin
      user: "${SQL_USER}"
      password: "${SQL_PASSWORD}"
      persistenceUnit: PolicyDb

    policy-preload:
      policyTypes:
        - policytypes/onap.policies.monitoring.tcagen2.yaml
        - policytypes/onap.policies.monitoring.dcaegen2.collectors.datafile.datafile-app-server.yaml
        - policytypes/onap.policies.monitoring.dcae-restconfcollector.yaml
        - policytypes/onap.policies.monitoring.dcae-pm-subscription-handler.yaml
        - policytypes/onap.policies.monitoring.dcae-pm-mapper.yaml
        - policytypes/onap.policies.Optimization.yaml
        - policytypes/onap.policies.optimization.Resource.yaml
        - policytypes/onap.policies.optimization.Service.yaml
        - policytypes/onap.policies.optimization.resource.AffinityPolicy.yaml
        - policytypes/onap.policies.optimization.resource.DistancePolicy.yaml
        - policytypes/onap.policies.optimization.resource.HpaPolicy.yaml
        - policytypes/onap.policies.optimization.resource.OptimizationPolicy.yaml
        - policytypes/onap.policies.optimization.resource.PciPolicy.yaml
        - policytypes/onap.policies.optimization.service.QueryPolicy.yaml
        - policytypes/onap.policies.optimization.service.SubscriberPolicy.yaml
        - policytypes/onap.policies.optimization.resource.Vim_fit.yaml
        - policytypes/onap.policies.optimization.resource.VnfPolicy.yaml
        - policytypes/onap.policies.controlloop.guard.Common.yaml
        - policytypes/onap.policies.controlloop.guard.common.Blacklist.yaml
        - policytypes/onap.policies.controlloop.guard.common.FrequencyLimiter.yaml
        - policytypes/onap.policies.controlloop.guard.common.MinMax.yaml
        - policytypes/onap.policies.controlloop.guard.common.Filter.yaml
        - policytypes/onap.policies.controlloop.guard.coordination.FirstBlocksSecond.yaml
        - policytypes/onap.policies.Naming.yaml
        - policytypes/onap.policies.Match.yaml
        - policytypes/onap.policies.native.Drools.yaml
        - policytypes/onap.policies.native.Xacml.yaml
        - policytypes/onap.policies.native.Apex.yaml
        - policytypes/onap.policies.controlloop.operational.Common.yaml
        - policytypes/onap.policies.controlloop.operational.common.Apex.yaml
        - policytypes/onap.policies.controlloop.operational.common.Drools.yaml
      policies:
        - policies/sdnc.policy.naming.input.tosca.yaml

    management:
      endpoints:
        web:
          base-path: /
          exposure:
            include: health,metrics,prometheus
          path-mapping.prometheus: metrics
  logback.xml: |
    <!--
      ============LICENSE_START=======================================================
       Copyright (C) 2020 Bell Canada. All rights reserved.
       Modifications Copyright (C) 2021 AT&T Intellectual Property. All rights reserved.
      ================================================================================
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
           http://www.apache.org/licenses/LICENSE-2.0
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
      SPDX-License-Identifier: Apache-2.0
      ============LICENSE_END=========================================================
    -->

    <configuration scan="true" scanPeriod="30 seconds" debug="false">

        <appender name="ErrorOut"
            class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/api/error.log</file>
            <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/api/error.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>WARN</level>
            </filter>
            <encoder>
                <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncErrorOut"
            class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="ErrorOut" />
        </appender>

        <appender name="DebugOut"
            class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/api/debug.log</file>
            <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/api/debug.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncDebugOut"
            class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="DebugOut" />
        </appender>

        <appender name="NetworkOut"
            class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/api/network.log</file>
            <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/api/network.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%t]%m%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncNetworkOut"
            class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="NetworkOut" />
        </appender>

        <appender name="MetricOut"
            class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/api/metric.log</file>
            <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/api/metric.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>%X{RequestID}|%X{InvocationID}|%X{ServiceName}|%X{PartnerName}|%X{BeginTimestamp}|%X{EndTimestamp}|%X{ElapsedTime}|%X{ServiceInstanceID}|%X{VirtualServerName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDescription}|%X{InstanceUUID}|%X{Severity}|%X{TargetEntity}|%X{TargetServiceName}|%X{Server}|%X{ServerIPAddress}|%X{ServerFQDN}|%X{ClientIPAddress}|%X{ProcessKey}|%X{RemoteHost}|%X{AlertSeverity}|%X{TargetVirtualEntity}|%level|%thread| %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncMetricOut"
            class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="MetricOut" />
        </appender>

        <appender name="TransactionOut"
            class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/api/audit.log</file>
            <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/api/audit.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>%X{RequestID}|%X{InvocationID}|%X{ServiceName}|%X{PartnerName}|%X{BeginTimestamp}|%X{EndTimestamp}|%X{ElapsedTime}|%X{ServiceInstanceID}|%X{VirtualServerName}|%X{StatusCode}|%X{ResponseCode}|%X{ResponseDescription}|%X{InstanceUUID}|%X{Severity}|%X{TargetEntity}|%X{TargetServiceName}|%X{Server}|%X{ServerIPAddress}|%X{ServerFQDN}|%X{ClientIPAddress}|%X{ProcessKey}|%X{RemoteHost}|%X{AlertSeverity}|%X{TargetVirtualEntity}|%level|%thread| %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncTransactionOut"
            class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="TransactionOut" />
        </appender>

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <Pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</Pattern>
            </encoder>
        </appender>

        <appender name="AsyncStdOut" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="STDOUT" />
        </appender>

        <logger name="network" level="INFO" additivity="false">
            <appender-ref ref="AsyncNetworkOut" />
            <appender-ref ref="AsyncStdOut" />
        </logger>

        <logger name="org.eclipse.jetty.server.RequestLog" level="info"
            additivity="false">
            <appender-ref ref="AsyncNetworkOut" />
            <appender-ref ref="AsyncStdOut" />
        </logger>

        <logger name="org.eclipse.jetty" level="ERROR" />

        <root level="INFO">
            <appender-ref ref="AsyncDebugOut" />
            <appender-ref ref="AsyncErrorOut" />
            <appender-ref ref="AsyncMetricOut" />
            <appender-ref ref="AsyncTransactionOut" />
            <appender-ref ref="AsyncStdOut" />
        </root>

    </configuration>
