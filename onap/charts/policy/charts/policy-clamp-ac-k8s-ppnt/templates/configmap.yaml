# Source: onap/charts/policy/charts/policy-clamp-ac-k8s-ppnt/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: onap-policy-clamp-ac-k8s-ppnt-configmap
  namespace: onap
  labels:
    app: policy-clamp-ac-k8s-ppnt
    chart: policy-clamp-ac-k8s-ppnt-10.0.0
    release: onap
    heritage: Helm
data:
  KubernetesParticipantParameters.yaml: |
    #  ============LICENSE_START=======================================================
    #   Copyright (C) 2021-2022 Nordix Foundation. All rights reserved.
    #  ================================================================================
    #  Licensed under the Apache License, Version 2.0 (the "License");
    #  you may not use this file except in compliance with the License.
    #  You may obtain a copy of the License at
    #
    #       http://www.apache.org/licenses/LICENSE-2.0
    #
    #  Unless required by applicable law or agreed to in writing, software
    #  distributed under the License is distributed on an "AS IS" BASIS,
    #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #  See the License for the specific language governing permissions and
    #  limitations under the License.
    #
    #  SPDX-License-Identifier: Apache-2.0
    #  ============LICENSE_END=========================================================

    spring:
      security:
        user:
          name: ${RESTSERVER_USER}
          password: ${RESTSERVER_PASSWORD}
    security:
      enable-csrf: false

    participant:
      localChartDirectory: /home/policy/local-charts
      infoFileName: CHART_INFO.json
      intermediaryParameters:
        reportingTimeIntervalMs: 120000
        description: Participant Description
        participantId:
          name: K8sParticipant0
          version: 1.0.0
        participantType:
          name: org.onap.policy.clamp.acm.KubernetesParticipant
          version: 2.3.4
        clampAutomationCompositionTopics:
          topicSources:
            -
              topic: POLICY-ACRUNTIME-PARTICIPANT
              servers:
                - ${topicServer:message-router}
              topicCommInfrastructure: dmaap
              fetchTimeout: 15000
              useHttps: true
          topicSinks:
            -
              topic: POLICY-ACRUNTIME-PARTICIPANT
              servers:
                - ${topicServer:message-router}
              topicCommInfrastructure: dmaap
              useHttps: true

    management:
      endpoints:
        web:
          exposure:
            include: health, metrics, prometheus

    server:
      # Configuration of the HTTP/REST server. The parameters are defined and handled by the springboot framework.
      # See springboot documentation.
      port: 8083
      servlet:
        context-path: /onap/policy/clamp/acm/k8sparticipant

    logging:
      # Configuration of logging
      level:
        ROOT: INFO
        org.springframework: ERROR
        org.springframework.data: ERROR
        org.springframework.web.reactive.function.client.ExchangeFunctions: ERROR
        org.onap.policy.clamp.controlloop.participant.kubernetes: INFO

      file:
        name: /var/log/onap/policy/clamp/application.log

    chart:
      api:
        enabled: false

    # Sample Permitted list of helm repositories. Before deployment update the repositories where the helm charts are located.
    # The Kubernetes participant accept only HTTPS Address
    helm:
      repos:
        -
          repoName: bitnami
          address: https://charts.bitnami.com/bitnami
  logback.xml: |
    <!--
      ============LICENSE_START=======================================================
      Copyright (C) 2021 Nordix Foundation. All rights reserved.
      ================================================================================
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
           http://www.apache.org/licenses/LICENSE-2.0
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
      SPDX-License-Identifier: Apache-2.0
      ============LICENSE_END=========================================================
    -->

    <configuration scan="true" scanPeriod="30 seconds" debug="false">

        <appender name="ErrorOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/k8s-participant/error.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/k8s-participant/error.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>WARN</level>
            </filter>
            <encoder>
                <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncErrorOut" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="ErrorOut" />
        </appender>

        <appender name="DebugOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/k8s-participant/debug.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/k8s-participant/debug.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncDebugOut" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="DebugOut" />
        </appender>

        <appender name="NetworkOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/k8s-participant/network.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/k8s-participant/network.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%t]%m%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncNetworkOut" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="NetworkOut" />
        </appender>

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <Pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</Pattern>
            </encoder>
        </appender>

        <appender name="AsyncStdOut" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="STDOUT" />
        </appender>

        <logger name="network" level="INFO" additivity="false">
            <appender-ref ref="AsyncNetworkOut" />
            <appender-ref ref="AsyncStdOut" />
        </logger>

        <logger name="org.eclipse.jetty.server.RequestLog" level="info" additivity="false">
            <appender-ref ref="AsyncNetworkOut" />
            <appender-ref ref="AsyncStdOut" />
        </logger>

        <root level="INFO">
            <appender-ref ref="AsyncDebugOut" />
            <appender-ref ref="AsyncErrorOut" />
            <appender-ref ref="AsyncStdOut" />
        </root>

    </configuration>
