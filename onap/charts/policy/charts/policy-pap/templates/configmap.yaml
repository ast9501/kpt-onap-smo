# Source: onap/charts/policy/charts/policy-pap/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: onap-policy-pap-configmap
  namespace: onap
  labels:
    app: policy-pap
    chart: policy-pap-10.0.0
    release: onap
    heritage: Helm
data:
  logback.xml: |
    <!--
      ============LICENSE_START=======================================================
       Copyright (C) 2020 Bell Canada. All rights reserved.
       Modifications Copyright (C) 2021 AT&T Intellectual Property. All rights reserved.
      ================================================================================
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
           http://www.apache.org/licenses/LICENSE-2.0
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
      SPDX-License-Identifier: Apache-2.0
      ============LICENSE_END=========================================================
    -->

    <configuration scan="true" scanPeriod="30 seconds" debug="false">

        <appender name="ErrorOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/pap/error.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/pap/error.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>WARN</level>
            </filter>
            <encoder>
                <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncErrorOut" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="ErrorOut" />
        </appender>

        <appender name="DebugOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/pap/debug.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/pap/debug.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncDebugOut" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="DebugOut" />
        </appender>

        <appender name="NetworkOut" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>/var/log/onap/policy/pap/network.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>/var/log/onap/policy/pap/network.%d{yyyy-MM-dd}.%i.log.zip
                </fileNamePattern>
                <maxFileSize>50MB</maxFileSize>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
            <encoder>
                <pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%t]%m%n</pattern>
            </encoder>
        </appender>

        <appender name="AsyncNetworkOut" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="NetworkOut" />
        </appender>

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <Pattern>[%d{yyyy-MM-dd'T'HH:mm:ss.SSS+00:00, UTC}|%level|%logger{0}|%thread] %msg%n</Pattern>
            </encoder>
        </appender>

        <appender name="AsyncStdOut" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="STDOUT" />
        </appender>

        <logger name="network" level="INFO" additivity="false">
            <appender-ref ref="AsyncNetworkOut" />
            <appender-ref ref="AsyncStdOut" />
        </logger>

        <logger name="org.eclipse.jetty.server.RequestLog" level="info" additivity="false">
            <appender-ref ref="AsyncNetworkOut" />
            <appender-ref ref="AsyncStdOut" />
        </logger>

        <root level="INFO">
            <appender-ref ref="AsyncDebugOut" />
            <appender-ref ref="AsyncErrorOut" />
            <appender-ref ref="AsyncStdOut" />
        </root>

    </configuration>
  papParameters.yaml: |
    #  ============LICENSE_START=======================================================
    #   Copyright (C) 2022 Bell Canada. All rights reserved.
    #  ================================================================================
    #  Licensed under the Apache License, Version 2.0 (the "License");
    #  you may not use this file except in compliance with the License.
    #  You may obtain a copy of the License at
    #
    #       http://www.apache.org/licenses/LICENSE-2.0
    #
    #  Unless required by applicable law or agreed to in writing, software
    #  distributed under the License is distributed on an "AS IS" BASIS,
    #  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #  See the License for the specific language governing permissions and
    #  limitations under the License.
    #
    #  SPDX-License-Identifier: Apache-2.0
    #  ============LICENSE_END=========================================================

    spring:
      security:
        user:
          name: "${RESTSERVER_USER}"
          password: "${RESTSERVER_PASSWORD}"
      http:
        converters:
          preferred-json-mapper: gson
      datasource:
        url: jdbc:mariadb://policy-mariadb:3306/policyadmin
        driverClassName: org.mariadb.jdbc.Driver
        username: "${SQL_USER}"
        password: "${SQL_PASSWORD}"
        hikari:
          maximumPoolSize: 20
      jpa:
        properties:
          hibernate:
            dialect: org.hibernate.dialect.MariaDB103Dialect
        hibernate:
          ddl-auto: none
          naming:
            physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
            implicit-strategy: org.onap.policy.common.spring.utils.CustomImplicitNamingStrategy

    server:
      port: 6969
      ssl:
        enabled: true

    pap:
      name: PapGroup
      aaf: false
      pdpParameters:
        heartBeatMs: 120000
        updateParameters:
          maxRetryCount: 1
          maxWaitMs: 30000
        stateChangeParameters:
          maxRetryCount: 1
          maxWaitMs: 30000
      savePdpStatisticsInDb: false
      topicParameterGroup:
        topicSources:
        - topic: POLICY-PDP-PAP
          servers:
          - message-router
          useHttps: true
          fetchTimeout: 15000
          topicCommInfrastructure: dmaap
        - topic: POLICY-HEARTBEAT
          effectiveTopic: POLICY-PDP-PAP
          consumerGroup: policy-pap
          servers:
          - message-router
          useHttps: true
          fetchTimeout: 15000
          topicCommInfrastructure: dmaap
        topicSinks:
        - topic: POLICY-PDP-PAP
          servers:
          - message-router
          useHttps: true
          topicCommInfrastructure: dmaap
        - topic: POLICY-NOTIFICATION
          servers:
          - message-router
          useHttps: true
          topicCommInfrastructure: dmaap
      healthCheckRestClientParameters:
      - clientName: api
        hostname: policy-api
        port: 6969
        userName: "${API_USER}"
        password: "${API_PASSWORD}"
        useHttps: true
        basePath: policy/api/v1/healthcheck
      - clientName: distribution
        hostname: policy-distribution
        port: 6969
        userName: "${DISTRIBUTION_USER}"
        password: "${DISTRIBUTION_PASSWORD}"
        useHttps: true
        basePath: healthcheck
      - clientName: dmaap
        hostname: message-router
        port: 3905
        useHttps: true
        basePath: topics

    management:
      endpoints:
        web:
          base-path: /
          exposure:
            include: health, metrics, prometheus
          path-mapping.prometheus: metrics
