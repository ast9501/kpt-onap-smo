# Source: onap/charts/dmaap/charts/dmaap-bc/charts/postgres/templates/deployment-replica.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onap-dbc-pg-replica
  namespace: onap
  labels:
    app: dbc-pg-replica
    chart: postgres-10.0.0
    release: onap
    heritage: Helm
    name: "dbc-pg-replica"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: dbc-pg-replica
  template:
    metadata:
      labels:
        app: dbc-pg-replica
        release: onap
        name: "dbc-pg-replica"
    spec:
      imagePullSecrets:
      - name: "onap-docker-registry-key"
      initContainers:
      - command:
        - sh
        args:
        - -c
        - |
          function prepare_password {
            echo -n $1 | sed -e "s/'/''/g"
          }
          export PG_PRIMARY_PASSWORD=`prepare_password $PG_PRIMARY_PASSWORD_INPUT`;
          export PG_PASSWORD=`prepare_password $PG_PASSWORD_INPUT`;
          export PG_ROOT_PASSWORD=`prepare_password $PG_ROOT_PASSWORD_INPUT`;
          cd /config-input && for PFILE in `ls -1 .`; do envsubst <${PFILE} >/config/${PFILE}; done
        env:
        - name: PG_PRIMARY_USER
          value: primaryuser
        - name: MODE
          value: postgres
        - name: PG_PRIMARY_PASSWORD_INPUT
          valueFrom:
            secretKeyRef:
              name: onap-dbc-pg-primary-password
              key: password
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: onap-dmaap-bc-pg-user-creds
              key: login
        - name: PG_PASSWORD_INPUT
          valueFrom:
            secretKeyRef:
              name: onap-dmaap-bc-pg-user-creds
              key: password
        - name: PG_DATABASE
          value: "dmaap"
        - name: PG_ROOT_PASSWORD_INPUT
          valueFrom:
            secretKeyRef:
              name: onap-dmaap-bc-pg-root-pass
              key: password
        volumeMounts:
        - mountPath: /config-input/setup.sql
          name: config
          subPath: setup.sql
        - mountPath: /config
          name: pgconf
        image: docker.io/dibi/envsubst:1
        imagePullPolicy: IfNotPresent
        name: dbc-pg-update-config
      - name: init-sysctl
        command:
        - /bin/sh
        - -c
        - |
          chown 26:26 /podroot/;
          chmod 700 /podroot/;
        image: docker.io/busybox:1.34.1
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: onap-dbc-pg-data
          mountPath: /podroot/
      containers:
      - name: dbc-pg
        image: docker.io/crunchydata/crunchy-postgres:centos8-13.2-4.6.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: tcp-postgres
        # disable liveness probe when breakpoints set in debugger
        # so K8s doesn't restart unresponsive container
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 300
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 10
          periodSeconds: 10
        env:
        - name: PGHOST
          value: /tmp
        - name: PG_PRIMARY_USER
          value: primaryuser
        - name: MODE
          value: postgres
        - name: PG_MODE
          value: replica
        - name: PG_PRIMARY_HOST
          value: "dbc-pg-primary"
        - name: PG_REPLICA_HOST
          value: "dbc-pg-replica"
        - name: PG_PRIMARY_PORT
          value: "5432"
        - name: PG_PRIMARY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: onap-dbc-pg-primary-password
              key: password
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: onap-dmaap-bc-pg-user-creds
              key: login
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: onap-dmaap-bc-pg-user-creds
              key: password
        - name: PG_DATABASE
          value: "dmaap"
        - name: PG_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: onap-dmaap-bc-pg-root-pass
              key: password
        - name: PGDATA_PATH_OVERRIDE
          value: "data"
        volumeMounts:
        - name: config
          mountPath: /pgconf/pool_hba.conf
          subPath: pool_hba.conf
        - name: pgconf
          mountPath: /pgconf/setup.sql
          subPath: setup.sql
        - mountPath: /pgdata
          name: onap-dbc-pg-data
        - mountPath: /backup
          name: onap-dbc-pg-backup
          readOnly: true
        resources: {}
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: onap-dbc-pg-backup
        emptyDir: {}
      - name: onap-dbc-pg-data
        persistentVolumeClaim:
          claimName: onap-dbc-pg-replica
      - name: config
        configMap:
          name: onap-dbc-pg
      - name: pgconf
        emptyDir:
          medium: Memory
