# Source: onap/charts/dmaap/charts/message-router/templates/statefulset.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: onap-message-router-zk-network-policy
  namespace: onap
spec:
  podSelector:
    matchLabels:
      strimzi.io/name: onap-strimzi-zookeeper
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: message-router
    ports:
    - port: 2181
      protocol: TCP
  policyTypes:
  - Ingress
---
# Source: onap/charts/dmaap/charts/message-router/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: onap-message-router
  namespace: onap
  labels:
    app.kubernetes.io/name: message-router
    helm.sh/chart: message-router-10.0.0
    app.kubernetes.io/instance: onap
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: message-router
      app.kubernetes.io/instance: onap
  serviceName: message-router
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: message-router
        helm.sh/chart: message-router-10.0.0
        app.kubernetes.io/instance: onap
        app.kubernetes.io/managed-by: Helm
      name: message-router
    spec:
      initContainers:
      - name: dmaap-mr-cert-initializer-readiness
        image: nexus3.onap.org:10001/onap/oom/readiness:3.0.1
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 100
          runAsGroup: 65533
        command:
        - /app/ready.py
        args:
        - --container-name
        - aaf-locate
        - --container-name
        - aaf-cm
        - --container-name
        - aaf-service
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 3m
            memory: 20Mi
      - name: message-router-aaf-config
        image: nexus3.onap.org:10001/onap/aaf/aaf_agent:2.1.20
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /opt/app/osaaf
          name: onap-message-router-aaf-config
        - mountPath: /opt/app/aaf_config/cert/truststoreONAPall.jks.b64
          name: aaf-agent-certs
          subPath: truststoreONAPall.jks.b64
        - mountPath: /opt/app/aaf_config/cert/truststoreONAP.p12.b64
          name: aaf-agent-certs
          subPath: truststoreONAP.p12.b64
        - name: aaf-add-config
          mountPath: /opt/app/aaf_config/bin/retrieval_check.sh
          subPath: retrieval_check.sh
        - name: aaf-add-config
          mountPath: /opt/app/aaf_config/bin/aaf-add-config.sh
          subPath: aaf-add-config.sh
        command:
        - sh
        - -c
        - |
          /opt/app/aaf_config/bin/agent.sh
          . /opt/app/aaf_config/bin/retrieval_check.sh
          /opt/app/aaf_config/bin/aaf-add-config.sh
        env:
        - name: APP_FQI
          value: "dmaapmr@mr.dmaap.onap.org"
        - name: aaf_locate_url
          value: "https://aaf-locate.onap:8095"
        - name: aaf_locator_container_ns
          value: "onap"
        - name: aaf_locator_container
          value: "oom"
        - name: aaf_locator_fqdn
          value: "dmaap-mr"
        - name: aaf_locator_app_ns
          value: "org.osaaf.aaf"
        - name: DEPLOY_FQI
          valueFrom:
            secretKeyRef:
              name: onap-dmaap-mr-cert-initializer-deployer-creds
              key: login
        - name: DEPLOY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: onap-dmaap-mr-cert-initializer-deployer-creds
              key: password
              #Note: want to put this on Nodes, eventually
        - name: cadi_longitude
          value: "-122.26147"
        - name: cadi_latitude
          value: "37.78187"
          #Hello specific.  Clients don't don't need this, unless Registering with AAF Locator
        - name: aaf_locator_public_fqdn
          value: "mr.dmaap.onap.org"
      - name: message-router-update-config
        command:
        - sh
        args:
        - -c
        - |
          export $(cat /appl/dmaapMR1/bundleconfig/etc/sysprops/local/mycreds.prop | xargs -0);
          cd /config-input  && for PFILE in `ls -1 .`; do envsubst <${PFILE} >/config/${PFILE}; done
        volumeMounts:
        - mountPath: /appl/dmaapMR1/bundleconfig/etc/sysprops
          name: onap-message-router-aaf-config
        - mountPath: /config
          name: jetty
        - mountPath: /config-input
          name: etc
        image: docker.io/dibi/envsubst:1
        imagePullPolicy: IfNotPresent
      containers:
      - name: srimzi-zk-entrance
        image: 'docker.io/scholzj/zoo-entrance:latest'
        command:
        - /opt/stunnel/stunnel_run.sh
        ports:
        - containerPort: 2181
          name: zoo
          protocol: TCP
        env:
        - name: LOG_LEVEL
          value: debug
        - name: STRIMZI_ZOOKEEPER_CONNECT
          value: 'onap-strimzi-zookeeper-client:2181'
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /opt/stunnel/stunnel_healthcheck.sh
            - '2181'
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - /opt/stunnel/stunnel_healthcheck.sh
            - '2181'
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /etc/cluster-operator-certs/
          name: cluster-operator-certs
        - mountPath: /etc/cluster-ca-certs/
          name: cluster-ca-certs
      - name: message-router
        image: nexus3.onap.org:10001/onap/dmaap/dmaap-mr:1.3.2
        imagePullPolicy: IfNotPresent
        command:
        - sh
        args:
        - -c
        - |
          cp /jetty-config/ajsc-jetty.xml /appl/dmaapMR1/etc/
          cp /jetty-config/cadi.properties /appl/dmaapMR1/bundleconfig/etc/sysprops/local/cadi.properties
          /bin/sh /appl/startup.sh
        ports:
        - containerPort: 3905
          name: api
        - containerPort: 3904
          name: api-plain
        livenessProbe:
          tcpSocket:
            port: api
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: api
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          tcpSocket:
            port: api
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 70
        env:
        - name: JAASLOGIN
          valueFrom:
            secretKeyRef:
              name: strimzi-kafka-admin
              key: sasl.jaas.config
        - name: SASLMECH
          value: scram-sha-512
        - name: enableCadi
          value: "true"
        volumeMounts:
        - mountPath: /appl/dmaapMR1/bundleconfig/etc/sysprops
          name: onap-message-router-aaf-config
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /appl/dmaapMR1/bundleconfig/etc/appprops/MsgRtrApi.properties
          subPath: MsgRtrApi.properties
          name: appprops
        - mountPath: /appl/dmaapMR1/bundleconfig/etc/logback.xml
          subPath: logback.xml
          name: logback
        - mountPath: /appl/dmaapMR1/etc/runner-web.xml
          subPath: runner-web.xml
          name: etc
        - mountPath: /appl/dmaapMR1/bundleconfig/etc/sysprops/sys-props.properties
          subPath: sys-props.properties
          name: sys-props
        - mountPath: /jetty-config
          name: jetty
        resources: {}
      serviceAccountName: onap-message-router-read
      volumes:
      - name: onap-message-router-aaf-config
        emptyDir:
          medium: Memory
      - name: aaf-agent-certs
        configMap:
          name: onap-cert-wrapper-certs
          defaultMode: 0700
      - name: aaf-add-config
        configMap:
          name: onap-dmaap-mr-cert-initializer-add-config
          defaultMode: 0700
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: appprops
        configMap:
          name: onap-message-router-msgrtrapi-prop-configmap
      - name: etc
        configMap:
          name: onap-message-router-etc
      - name: logback
        configMap:
          name: onap-message-router-logback-xml-configmap
      - name: sys-props
        configMap:
          name: onap-message-router-sys-props
      - name: jetty
        emptyDir: {}
      - name: cluster-operator-certs
        secret:
          defaultMode: 288
          secretName: onap-strimzi-cluster-operator-certs
      - name: cluster-ca-certs
        secret:
          defaultMode: 288
          secretName: onap-strimzi-cluster-ca-cert
      imagePullSecrets:
      - name: "onap-docker-registry-key"
