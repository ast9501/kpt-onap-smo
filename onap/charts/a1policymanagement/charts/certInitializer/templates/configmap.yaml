# Source: onap/charts/a1policymanagement/charts/certInitializer/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: onap-a1p-cert-initializer-add-config
  namespace: onap
  labels:
    app.kubernetes.io/name: a1p-cert-initializer
    helm.sh/chart: certInitializer-10.0.0
    app.kubernetes.io/instance: onap
    app.kubernetes.io/managed-by: Helm
data:
  retrieval_check.sh: |
    #!/bin/sh

    echo "*** retrieving passwords for certificates"
    export $(/opt/app/aaf_config/bin/agent.sh local showpass \
      a1p@a1p.onap.org a1p | grep '^c' | xargs -0)
    if [ -z "$cadi_keystore_password_p12" ]
    then
      echo " /!\ certificates retrieval failed"
      exit 1
    fi
    echo "*** password retrieval succeeded"
  aaf-add-config.sh: |
    echo "*** changing them into shell safe ones"
    export KEYSTORE_PASSWORD=$(tr -cd '[:alnum:]' < /dev/urandom | fold -w64 | head -n1)
    export TRUSTSORE_PASSWORD=$(tr -cd '[:alnum:]' < /dev/urandom | fold -w64 | head -n1)
    cd /opt/app/osaaf/local
    keytool -storepasswd -new "${KEYSTORE_PASSWORD}" \
      -storepass "${cadi_keystore_password_p12}" \
      -keystore org.onap.a1p.p12
    keytool -storepasswd -new "${TRUSTSORE_PASSWORD}" \
      -storepass "${cadi_truststore_password}" \
      -keystore org.onap.a1p.trust.jks
    echo "*** save the generated passwords"
    echo "KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}" > mycreds.prop
    echo "TRUSTSORE_PASSWORD=${TRUSTSORE_PASSWORD}" >> mycreds.prop
    echo "*** change ownership of certificates to targeted user"
    chown -R 1000 .
